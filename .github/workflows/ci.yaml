name: CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment variables
        run: cat .github/.env >> $GITHUB_ENV

      - name: Check latest Debian image
        run: |
          echo DEBIAN_ASDF_TAG=$(docker run --rm gcr.io/go-containerregistry/crane ls dex4er/debian-asdf | grep -P '^bullseye-[0-9]+-' | sort -r | head -n1) | tee -a $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_REPO }}
          tags: |
            type=edge
            type=sha
            type=ref,event=branch
            type=ref,event=pr

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: int128/kaniko-action@v1
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DEBIAN_ASDF_TAG=${{ env.DEBIAN_ASDF_TAG }}
          kaniko-args: |
            --tarPath=/kaniko/action/output/image.tar
            --single-snapshot
            --skip-unused-stages
            --snapshotMode=redo
            --use-new-run

      - name: Reuse built image
        run: docker load -i /tmp/kaniko-action-*/image.tar

      - name: Test built image
        run: |
          docker run --rm -t ${IMAGE_REPO}:edge bash -c "aws --version" | grep ^aws-cli/
          docker run --rm -t ${IMAGE_REPO}:edge bash -c "jq --version" | grep ^jq-
          docker run --rm -t ${IMAGE_REPO}:edge bash -c "psql --version" | grep ^psql

      - name: Prepare new release tag
        id: image
        run: echo IMAGE_TAG=${DEBIAN_ASDF_TAG%-asdf-*}$(cat .tool-versions | while read plugin version; do echo -n "-$plugin-$version"; done) | tee -a $GITHUB_ENV

      - name: Retag to release
        if: github.event_name != 'pull_request'
        run: docker tag ${IMAGE_REPO}:edge ${IMAGE_REPO}:${IMAGE_TAG}

      - name: Push the release
        if: github.event_name != 'pull_request'
        run: docker push ${IMAGE_REPO}:${IMAGE_TAG}

      - name: Retag to latest
        if: github.event_name != 'pull_request'
        run: docker tag ${IMAGE_REPO}:edge ${IMAGE_REPO}:latest

      - name: Push the latest
        if: github.event_name != 'pull_request'
        run: docker push ${IMAGE_REPO}:latest

      - name: Create new git tag
        if: github.event_name != 'pull_request'
        run: |
          git tag -f ${IMAGE_TAG}
          git push -f origin ${IMAGE_TAG}
